{"version":3,"sources":["../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","hooks/useApproveTaxOffice.ts","hooks/useProvideTombFtmLP.ts","views/Liquidity/Liquidity.js","hooks/useHandleTransactionReceipt.ts","hooks/useApprove.ts","hooks/useTombStats.ts","hooks/useLpStats.ts","assets/img/home.png"],"names":["createSvgIcon","React","d","defaultIconMapping","success","SuccessOutlinedIcon","fontSize","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","Alert","props","ref","action","children","classes","className","_props$closeText","closeText","color","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","severity","_props$variant","variant","other","_objectWithoutProperties","Paper","_extends","square","elevation","clsx","root","concat","capitalize","message","IconButton","size","title","onClick","withStyles","theme","getColor","palette","type","darken","lighten","getBackgroundColor","typography","body2","borderRadius","shape","backgroundColor","display","padding","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","opacity","alignItems","marginLeft","paddingLeft","name","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","from","useApproveTaxOffice","tombFinance","useTombFinance","token","APEX","pendingApproval","useHasPendingApproval","address","TAX_OFFICE_ADDR","currentAllowance","useAllowance","approvalState","useMemo","FTM","APPROVED","lt","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","useCallback","a","console","response","summary","symbol","approval","tokenAddress","spender","useProvideTombFtmLP","handleTransactionReceipt","useHandleTransactionReceipt","onProvideTombFtmLP","ftmAmount","tombAmount","tombAmountBn","parseUnits","provideTombFtmLP","BackgroundImage","createGlobalStyle","HomeImage","isNumeric","n","isNaN","parseFloat","isFinite","ProvideLiquidity","useState","setTombAmount","setFtmAmount","lpTokensAmount","setLpTokensAmount","balance","useWallet","tombStats","useTombStats","approveTaxOfficeStatus","approveTaxOffice","tombBalance","useTokenBalance","ftmBalance","toFixed","tombFtmLpStats","useLpStats","tombLPStats","tombPriceInFTM","Number","tokenInFtm","ftmPriceInTOMB","handleTombChange","e","currentTarget","value","quoteFromSpooky","handleFtmChange","tokenAmount","handleTombSelectMax","getDisplayBalance","handleFtmSelectMax","Page","Typography","align","gutterBottom","Grid","container","justify","Box","style","width","marginBottom","href","rel","target","item","xs","sm","mt","p","TokenInput","onSelectMax","onChange","max","justifyContent","textAlign","Button","toString","margin","addPopup","useAddPopup","promise","then","tx","catch","err","includes","toLowerCase","slice","stack","useApprove","stat","setStat","fastRefresh","useRefresh","useEffect","getTombStat","fetchTombPrice","lpTicker","slowRefresh","getLPStat","fetchLpPrice","module","exports"],"mappings":"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","file":"static/js/17.a7549f6b.chunk.js","sourcesContent":["import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import { BigNumber, ethers } from 'ethers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport { TAX_OFFICE_ADDR } from '../utils/constants';\r\nimport useTombFinance from './useTombFinance';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApproveTaxOffice(): [ApprovalState, () => Promise<void>] {\r\n  const tombFinance = useTombFinance();\r\n  let token: ERC20 = tombFinance.APEX;\r\n  // if (zappingToken === FTM_TICKER) token = tombFinance.FTM;\r\n  // else if (zappingToken === TOMB_TICKER) token = tombFinance.APEX;\r\n  // else if (zappingToken === TSHARE_TICKER) token = tombFinance.ASHARE;\r\n  const pendingApproval = useHasPendingApproval(token.address, TAX_OFFICE_ADDR);\r\n  const currentAllowance = useAllowance(token, TAX_OFFICE_ADDR, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (token === tombFinance.FTM) return ApprovalState.APPROVED;\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval, token, tombFinance]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(TAX_OFFICE_ADDR, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: TAX_OFFICE_ADDR,\r\n      },\r\n    });\r\n  }, [approvalState, token, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApproveTaxOffice;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\nimport { TAX_OFFICE_ADDR } from './../utils/constants'\r\n\r\nconst useProvideTombFtmLP = () => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleProvideTombFtmLP = useCallback(\r\n    (ftmAmount: string, tombAmount: string) => {\r\n      const tombAmountBn = parseUnits(tombAmount);\r\n      handleTransactionReceipt(\r\n        tombFinance.provideTombFtmLP(ftmAmount, tombAmountBn),\r\n        `Provide Apex-FTM LP ${tombAmount} ${ftmAmount} using ${TAX_OFFICE_ADDR}`,\r\n      );\r\n    },\r\n    [tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onProvideTombFtmLP: handleProvideTombFtmLP };\r\n};\r\n\r\nexport default useProvideTombFtmLP;\r\n","import React, { useMemo, useState } from 'react';\r\nimport Page from '../../components/Page';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport HomeImage from '../../assets/img/home.png';\r\nimport useLpStats from '../../hooks/useLpStats';\r\nimport { Box, Button, Grid, Paper, Typography } from '@material-ui/core';\r\nimport useTombStats from '../../hooks/useTombStats';\r\nimport TokenInput from '../../components/TokenInput';\r\nimport useTombFinance from '../../hooks/useTombFinance';\r\nimport { useWallet } from 'use-wallet';\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport { getDisplayBalance } from '../../utils/formatBalance';\r\nimport useApproveTaxOffice from '../../hooks/useApproveTaxOffice';\r\nimport { ApprovalState } from '../../hooks/useApprove';\r\nimport useProvideTombFtmLP from '../../hooks/useProvideTombFtmLP';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    // background: url(${HomeImage}) no-repeat !important;\r\n    // background-size: cover !important;\r\n    background-color: #ddd;\r\n  }\r\n`;\r\nfunction isNumeric(n) {\r\n  return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\nconst ProvideLiquidity = () => {\r\n  const [tombAmount, setTombAmount] = useState(0);\r\n  const [ftmAmount, setFtmAmount] = useState(0);\r\n  const [lpTokensAmount, setLpTokensAmount] = useState(0);\r\n  const { balance } = useWallet();\r\n  const tombStats = useTombStats();\r\n  const tombFinance = useTombFinance();\r\n  const [approveTaxOfficeStatus, approveTaxOffice] = useApproveTaxOffice();\r\n  const tombBalance = useTokenBalance(tombFinance.APEX);\r\n  const ftmBalance = (balance / 1e18).toFixed(4);\r\n  const { onProvideTombFtmLP } = useProvideTombFtmLP();\r\n  const tombFtmLpStats = useLpStats('STONE-FTM-LP');\r\n\r\n  const tombLPStats = useMemo(() => (tombFtmLpStats ? tombFtmLpStats : null), [tombFtmLpStats]);\r\n  const tombPriceInFTM = useMemo(() => (tombStats ? Number(tombStats.tokenInFtm).toFixed(2) : null), [tombStats]);\r\n  const ftmPriceInTOMB = useMemo(() => (tombStats ? Number(1 / tombStats.tokenInFtm).toFixed(2) : null), [tombStats]);\r\n  // const classes = useStyles();\r\n\r\n  const handleTombChange = async (e) => {\r\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\r\n      setTombAmount(e.currentTarget.value);\r\n    }\r\n    if (!isNumeric(e.currentTarget.value)) return;\r\n    setTombAmount(e.currentTarget.value);\r\n    const quoteFromSpooky = await tombFinance.quoteFromSpooky(e.currentTarget.value, 'APEX');\r\n    setFtmAmount(quoteFromSpooky);\r\n    setLpTokensAmount(quoteFromSpooky / tombLPStats.ftmAmount);\r\n  };\r\n\r\n  const handleFtmChange = async (e) => {\r\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\r\n      setFtmAmount(e.currentTarget.value);\r\n    }\r\n    if (!isNumeric(e.currentTarget.value)) return;\r\n    setFtmAmount(e.currentTarget.value);\r\n    const quoteFromSpooky = await tombFinance.quoteFromSpooky(e.currentTarget.value, 'FTM');\r\n    setTombAmount(quoteFromSpooky);\r\n\r\n    setLpTokensAmount(quoteFromSpooky / tombLPStats.tokenAmount);\r\n  };\r\n  const handleTombSelectMax = async () => {\r\n    const quoteFromSpooky = await tombFinance.quoteFromSpooky(getDisplayBalance(tombBalance), 'APEX');\r\n    setTombAmount(getDisplayBalance(tombBalance));\r\n    setFtmAmount(quoteFromSpooky);\r\n    setLpTokensAmount(quoteFromSpooky / tombLPStats.ftmAmount);\r\n  };\r\n  const handleFtmSelectMax = async () => {\r\n    const quoteFromSpooky = await tombFinance.quoteFromSpooky(ftmBalance, 'FTM');\r\n    setFtmAmount(ftmBalance);\r\n    setTombAmount(quoteFromSpooky);\r\n    setLpTokensAmount(ftmBalance / tombLPStats.ftmAmount);\r\n  };\r\n  return (\r\n    <Page>\r\n      <BackgroundImage />\r\n      <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\r\n        Provide Liquidity\r\n      </Typography>\r\n\r\n      <Grid container justify=\"center\">\r\n        <Box style={{ width: '600px' }}>\r\n          <Alert variant=\"filled\" severity=\"warning\" style={{ marginBottom: '10px' }}>\r\n            <b>This and <a href=\"https://spookyswap.finance/\"  rel=\"noopener noreferrer\" target=\"_blank\">Spookyswap</a> are the only ways to provide Liquidity on APEX-FTM pair without paying tax.</b>\r\n          </Alert>\r\n          <Grid item xs={12} sm={12}>\r\n            <Paper>\r\n              <Box mt={4}>\r\n                <Grid item xs={12} sm={12} style={{ borderRadius: 15 }}>\r\n                  <Box p={4}>\r\n                    <Grid container>\r\n                      <Grid item xs={12}>\r\n                        <TokenInput\r\n                          onSelectMax={handleTombSelectMax}\r\n                          onChange={handleTombChange}\r\n                          value={tombAmount}\r\n                          max={getDisplayBalance(tombBalance)}\r\n                          symbol={'APEX'}\r\n                        ></TokenInput>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TokenInput\r\n                          onSelectMax={handleFtmSelectMax}\r\n                          onChange={handleFtmChange}\r\n                          value={ftmAmount}\r\n                          max={ftmBalance}\r\n                          symbol={'FTM'}\r\n                        ></TokenInput>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <p>1 APEX = {tombPriceInFTM} FTM</p>\r\n                        <p>1 FTM = {ftmPriceInTOMB} APEX</p>\r\n                        <p>LP tokens ≈ {lpTokensAmount.toFixed(2)}</p>\r\n                      </Grid>\r\n                      <Grid xs={12} justifyContent=\"center\" style={{ textAlign: 'center' }}>\r\n                        {approveTaxOfficeStatus === ApprovalState.APPROVED ? (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            onClick={() => onProvideTombFtmLP(ftmAmount.toString(), tombAmount.toString())}\r\n                            color=\"primary\"\r\n                            style={{ margin: '0 10px', color: '#fff' }}\r\n                          >\r\n                            Supply\r\n                          </Button>\r\n                        ) : (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            onClick={() => approveTaxOffice()}\r\n                            color=\"secondary\"\r\n                            style={{ margin: '0 10px' }}\r\n                          >\r\n                            Approve\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </Grid>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        </Box>\r\n      </Grid>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProvideLiquidity;\r\n","import { useCallback } from 'react';\r\nimport { TransactionResponse } from '@ethersproject/providers';\r\nimport { useTransactionAdder } from '../state/transactions/hooks';\r\nimport { useAddPopup } from '../state/application/hooks';\r\n\r\nfunction useHandleTransactionReceipt(): (promise: Promise<TransactionResponse>, summary: string) => void {\r\n  const addTransaction = useTransactionAdder();\r\n  const addPopup = useAddPopup();\r\n\r\n  return useCallback(\r\n    (promise: Promise<TransactionResponse>, summary: string) => {\r\n      promise\r\n        .then((tx) => addTransaction(tx, { summary }))\r\n        .catch((err) => {\r\n          if (err.message.includes('User denied')) {\r\n            // User denied transaction signature on MetaMask.\r\n            return;\r\n          }\r\n          const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\r\n          console.error(`${message}: ${err.message || err.stack}`);\r\n          addPopup({ error: { message, stack: err.message || err.stack } });\r\n        });\r\n    },\r\n    [addPopup, addTransaction],\r\n  );\r\n}\r\n\r\nexport default useHandleTransactionReceipt;\r\n","import { BigNumber, ethers } from 'ethers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import { useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { TokenStat } from '../tomb-finance/types';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useTombStats = () => {\r\n  const [stat, setStat] = useState<TokenStat>();\r\n  const { fastRefresh } = useRefresh();\r\n  const tombFinance = useTombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchTombPrice(){\r\n      try {\r\n        setStat(await tombFinance.getTombStat());\r\n      }\r\n      catch(err){\r\n        console.error(err)\r\n      }\r\n    }\r\n    fetchTombPrice();\r\n  }, [setStat, tombFinance, fastRefresh]);\r\n\r\n  return stat;\r\n};\r\n\r\nexport default useTombStats;\r\n","import { useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { LPStat } from '../tomb-finance/types';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useLpStats = (lpTicker: string) => {\r\n  const [stat, setStat] = useState<LPStat>();\r\n  const { slowRefresh } = useRefresh();\r\n  const tombFinance = useTombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchLpPrice() {\r\n      try{\r\n        setStat(await tombFinance.getLPStat(lpTicker));\r\n      }\r\n      catch(err){\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchLpPrice();\r\n  }, [setStat, tombFinance, slowRefresh, lpTicker]);\r\n\r\n  return stat;\r\n};\r\n\r\nexport default useLpStats;\r\n","module.exports = __webpack_public_path__ + \"static/media/home.87c905bf.png\";"],"sourceRoot":""}