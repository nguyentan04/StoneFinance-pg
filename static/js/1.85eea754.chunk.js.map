{"version":3,"sources":["components/Card/Card.tsx","assets/img/twitter.svg","assets/img/github.svg","assets/img/telegram.svg","assets/img/discord.svg","assets/img/youtube.svg","assets/img/cryto_stone.png","assets/img/fantom-logo-grey.png","assets/img/wallet-connect.svg","assets/img/coinbase_logo.jpeg","assets/img/stone_c.png","assets/img/ashares_c.png","assets/img/crypto_tomb_cash.png","assets/img/crypto_tomb_share.png","assets/img/sbonds_c.png","assets/img/tomb_ftm_lp.png","assets/img/tshare_ftm_lp.png","assets/img/ftm_logo_blue.svg","assets/img/spooky.png","assets/img/zoo_logo.svg","assets/img/shiba_logo.svg","hooks/useRefresh.ts","state/transactions/hooks.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/TokenSymbol/TokenSymbol.tsx","components/Label/Label.tsx","hooks/useTokenBalance.ts","hooks/useAllowance.ts","components/Container/Container.tsx","components/Modal/Modal.tsx","components/ModalTitle/ModalTitle.tsx","hooks/useEagerConnect.js","components/Footer/Footer.js","components/Footer/index.js","components/ListItemLink/index.js","components/ListItemLink/ListItemLink.js","components/Nav/Nav.tsx","components/Nav/index.ts","components/Page/Page.tsx","hooks/useModal.ts","components/WalletProviderModal/WalletCard.js","components/WalletProviderModal/WalletProviderModal.js","components/WalletProviderModal/index.js","components/Nav/AccountModal.tsx","components/Nav/AccountButton.tsx","components/CardContent/CardContent.tsx","assets/img/metamask-fox.svg"],"names":["StyledCard","styled","div","props","theme","color","grey","Card","children","module","exports","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","useTransactionAdder","useWallet","chainId","account","dispatch","useDispatch","useCallback","response","summary","approval","hash","Error","addTransaction","from","useAllTransactions","state","useSelector","transactions","useHasPendingApproval","tokenAddress","spender","allTransactions","useMemo","Object","keys","some","tx","receipt","Date","getTime","addedTime","isTransactionRecent","StyledInputWrapper","borderRadius","spacing","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","TokenInput","max","symbol","onSelectMax","toLocaleString","Button","size","variant","onClick","logosBySymbol","APEX","tombLogo","TOMBPNG","tombLogoPNG","TSHAREPNG","tShareLogoPNG","ASHARE","tShareLogo","ABOND","tBondLogo","WFTM","wftmLogo","BOO","booLogo","SHIBA","shibaLogo","ZOO","zooLogo","tombFtmLpLogo","tshareFtmLpLogo","TokenSymbol","src","alt","width","height","StyledLabel","Label","labelColor","text","customColor","ThemeContext","primary","main","useTokenBalance","token","useState","BigNumber","balance","setBalance","tombFinance","useTombFinance","isUnlocked","fetchBalance","a","balanceOf","myAccount","useEffect","catch","err","console","error","stack","refreshInterval","setInterval","config","clearInterval","useAllowance","pendingApproval","allowance","setAllowance","fetchAllowance","StyledContainer","Container","siteWidth","StyledModal","Modal","CardContent","StyledModalTitle","topBarSize","ModalTitle","useEagerConnect","connect","connector","window","localStorage","getItem","setItem","connectorId","useStyles","makeStyles","footer","position","bottom","paddingTop","paddingBottom","backgroundColor","textAlign","breakpoints","down","display","link","marginLeft","img","Footer","classes","className","maxWidth","Grid","container","item","xs","Typography","align","Link","href","getFullYear","style","rel","target","TwitterImage","TelegramImage","DiscordImage","ListItemLink","to","CustomLink","React","forwardRef","linkProps","ref","ListItem","button","component","ListItemText","ul","margin","padding","listStyle","appBar","marginBottom","drawer","flexShrink","drawerPaper","hide","toolbar","flexWrap","toolbarTitle","fontFamily","fontSize","flexGrow","textTransform","textDecoration","brandLink","Nav","matches","useMediaQuery","useTheme","open","setOpen","handleDrawerClose","AppBar","elevation","Toolbar","noWrap","alignItems","CashImage","marginRight","paddingLeft","justifyContent","FantomLogo","Box","mr","AccountButton","IconButton","aria-label","edge","clsx","Drawer","onEscapeKeyDown","onBackdropClick","anchor","paper","direction","Divider","List","Page","minHeight","useModal","modal","Context","onDismiss","onPresent","WalletCard","icon","onConnect","title","fullWidth","palette","background","boxShadow","shadows","outline","WalletProviderModal","handleClose","aria-labelledby","aria-describedby","onClose","metamaskLogo","walletConnectLogo","coingBaseLogo","StyledValue","StyledBalance","Balances","StyledBalanceWrapper","AccountModal","tombBalance","displayTombBalance","getDisplayBalance","tshareBalance","displayTshareBalance","tbondBalance","displayTbondBalance","CustomBtn","accountEllipsis","substring","length","onPresentAccountModal","isWalletProviderOpen","setWalletProviderOpen","buttonText","StyledCardContent"],"mappings":"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","file":"static/js/1.85eea754.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Card: React.FC = ({ children }) => <StyledCard>{children}</StyledCard>;\r\n\r\nconst StyledCard = styled.div`\r\n  background-color: #1f1f2b; //${(props) => props.theme.color.grey[800]};\r\n  color: #9090ff !important;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default Card;\r\n","module.exports = __webpack_public_path__ + \"static/media/twitter.08d2ade8.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.1f24f07c.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.28146bd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/discord.5f33a495.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.503d2e22.svg\";","module.exports = __webpack_public_path__ + \"static/media/cryto_stone.83712cd9.png\";","module.exports = __webpack_public_path__ + \"static/media/fantom-logo-grey.eae752e2.png\";","module.exports = __webpack_public_path__ + \"static/media/wallet-connect.d1f73612.svg\";","module.exports = __webpack_public_path__ + \"static/media/coinbase_logo.3765bf16.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/stone_c.b61ba6c2.png\";","module.exports = __webpack_public_path__ + \"static/media/ashares_c.9b9fab6c.png\";","module.exports = __webpack_public_path__ + \"static/media/crypto_tomb_cash.fbd96145.png\";","module.exports = __webpack_public_path__ + \"static/media/crypto_tomb_share.0f0467bf.png\";","module.exports = __webpack_public_path__ + \"static/media/sbonds_c.93cbafc5.png\";","module.exports = __webpack_public_path__ + \"static/media/tomb_ftm_lp.9968c327.png\";","module.exports = __webpack_public_path__ + \"static/media/tshare_ftm_lp.2cdbbc14.png\";","module.exports = __webpack_public_path__ + \"static/media/ftm_logo_blue.3af63018.svg\";","module.exports = __webpack_public_path__ + \"static/media/spooky.1b007b4a.png\";","module.exports = __webpack_public_path__ + \"static/media/zoo_logo.d34dbeab.svg\";","module.exports = __webpack_public_path__ + \"static/media/shiba_logo.13b94045.svg\";","import { useContext } from 'react'\r\nimport { RefreshContext } from './../contexts/RefreshContext'\r\n\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh","import { TransactionResponse } from '@ethersproject/providers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useWallet } from 'use-wallet';\r\n\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { addTransaction, clearAllTransactions } from './actions';\r\nimport { TransactionDetails } from './reducer';\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } },\r\n) => void {\r\n  const { chainId, account } = useWallet();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      { summary, approval }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return;\r\n      if (!chainId) return;\r\n\r\n      const { hash } = response;\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.');\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }));\r\n    },\r\n    [dispatch, chainId, account],\r\n  );\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useWallet();\r\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\r\n\r\n  return chainId ? state[chainId] ?? {} : {};\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions();\r\n  if (!transactionHash || !transactions[transactionHash]) {\r\n    return false;\r\n  }\r\n  return !transactions[transactionHash].receipt;\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000;\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions();\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash];\r\n        if (!tx) return false;\r\n        if (tx.receipt) {\r\n          return false;\r\n        } else {\r\n          const approval = tx.approval;\r\n          if (!approval) return false;\r\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\r\n        }\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  );\r\n}\r\n\r\nexport function useClearAllTransactions(): { clearAllTransactions: () => void } {\r\n  const { chainId } = useWallet();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return {\r\n    clearAllTransactions: useCallback(() => dispatch(clearAllTransactions({ chainId })), [dispatch, chainId]),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode;\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n  startAdornment?: React.ReactNode;\r\n  value: string;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  );\r\n};\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[200]};\r\n  border-radius: ${(props) => props.theme.borderRadius}px;\r\n  display: flex;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.color.grey[600]};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`;\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport Input, { InputProps } from '../Input';\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string;\r\n  symbol: string;\r\n  onSelectMax?: () => void;\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText>\r\n        {max.toLocaleString()} {symbol} Available\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\r\n                Max\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n    </StyledTokenInput>\r\n  );\r\n};\r\n\r\n/*\r\n            <div>\r\n              <Button size=\"sm\" text=\"Max\" />\r\n            </div>\r\n*/\r\n\r\nconst StyledTokenInput = styled.div``;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.color.grey[700]};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport default TokenInput;\r\n","import React from 'react';\r\n\r\n//Graveyard ecosystem logos\r\nimport tombLogo from '../../assets/img/stone_c.png';\r\nimport tShareLogo from '../../assets/img/ashares_c.png';\r\nimport tombLogoPNG from '../../assets/img/crypto_tomb_cash.png';\r\nimport tShareLogoPNG from '../../assets/img/crypto_tomb_share.png';\r\nimport tBondLogo from '../../assets/img/sbonds_c.png';\r\n\r\nimport tombFtmLpLogo from '../../assets/img/tomb_ftm_lp.png';\r\nimport tshareFtmLpLogo from '../../assets/img/tshare_ftm_lp.png';\r\n\r\nimport wftmLogo from '../../assets/img/ftm_logo_blue.svg';\r\nimport booLogo from '../../assets/img/spooky.png';\r\nimport zooLogo from '../../assets/img/zoo_logo.svg';\r\nimport shibaLogo from '../../assets/img/shiba_logo.svg';\r\n\r\nconst logosBySymbol: { [title: string]: string } = {\r\n  //Real tokens\r\n  //=====================\r\n  APEX: tombLogo,\r\n  TOMBPNG: tombLogoPNG,\r\n  TSHAREPNG: tShareLogoPNG,\r\n  ASHARE: tShareLogo,\r\n  ABOND: tBondLogo,\r\n  WFTM: wftmLogo,\r\n  BOO: booLogo,\r\n  SHIBA: shibaLogo,\r\n  ZOO: zooLogo,\r\n  'STONE-FTM-LP': tombFtmLpLogo,\r\n  'SSHARE-FTM-LP': tshareFtmLpLogo,\r\n};\r\n\r\ntype LogoProps = {\r\n  symbol: string;\r\n  size?: number;\r\n};\r\n\r\nconst TokenSymbol: React.FC<LogoProps> = ({ symbol, size = 64 }) => {\r\n  if (!logosBySymbol[symbol]) {\r\n    throw new Error(`Invalid Token Logo symbol: ${symbol}`);\r\n  }\r\n  return <img src={logosBySymbol[symbol]} alt={`${symbol} Logo`} width={size} height={size} />;\r\n};\r\n\r\nexport default TokenSymbol;\r\n","import React, { useContext } from 'react';\r\nimport styled, { ThemeContext } from 'styled-components';\r\n\r\ninterface LabelProps {\r\n  text?: string;\r\n  variant?: 'primary' | 'secondary' | 'normal';\r\n  color?: string;\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({ text, variant = 'secondary', color: customColor }) => {\r\n  const { color } = useContext(ThemeContext);\r\n\r\n  let labelColor: string;\r\n  if (customColor) {\r\n    labelColor = customColor;\r\n  } else {\r\n    if (variant === 'primary') {\r\n      labelColor = color.primary.main;\r\n    } else if (variant === 'secondary') {\r\n      labelColor = '#9090ff'; //color.secondary.main;\r\n    } else if (variant === 'normal') {\r\n      labelColor = '#9090ff'; //color.grey[300];\r\n    }\r\n  }\r\n  return <StyledLabel color={labelColor}>{text}</StyledLabel>;\r\n};\r\n\r\ninterface StyledLabelProps {\r\n  color: string;\r\n}\r\n\r\nconst StyledLabel = styled.div<StyledLabelProps>`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nexport default Label;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\n\r\nconst useTokenBalance = (token: ERC20) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setBalance(await token.balanceOf(tombFinance.myAccount));\r\n  }, [token, tombFinance.myAccount]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(`Failed to fetch token balance: ${err.stack}`));\r\n      let refreshInterval = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshInterval);\r\n    }\r\n  }, [isUnlocked, token, fetchBalance, tombFinance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useTokenBalance;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\n\r\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\r\n  const [allowance, setAllowance] = useState<BigNumber>(null);\r\n  const { account } = useWallet();\r\n\r\n  const fetchAllowance = useCallback(async () => {\r\n    const allowance = await token.allowance(account, spender);\r\n    setAllowance(allowance);\r\n  }, [account, spender, token]);\r\n\r\n  useEffect(() => {\r\n    if (account && spender && token) {\r\n      fetchAllowance().catch((err) => console.error(`Failed to fetch allowance: ${err.stack}`));\r\n    }\r\n  }, [account, spender, token, pendingApproval, fetchAllowance]);\r\n\r\n  return allowance;\r\n};\r\n\r\nexport default useAllowance;\r\n","import React, { useContext } from 'react';\r\nimport styled, { ThemeContext } from 'styled-components';\r\n\r\ninterface ContainerProps {\r\n  children?: React.ReactNode;\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Container: React.FC<ContainerProps> = ({ children, size = 'md' }) => {\r\n  const { siteWidth } = useContext<{ siteWidth: number }>(ThemeContext);\r\n  let width: number;\r\n  switch (size) {\r\n    case 'sm':\r\n      width = siteWidth / 2;\r\n      break;\r\n    case 'md':\r\n      width = (siteWidth * 2) / 3;\r\n      break;\r\n    case 'lg':\r\n    default:\r\n      width = siteWidth;\r\n  }\r\n  return <StyledContainer width={width}>{children}</StyledContainer>;\r\n};\r\n\r\ninterface StyledContainerProps {\r\n  width: number;\r\n}\r\n\r\nconst StyledContainer = styled.div<StyledContainerProps>`\r\n  box-sizing: border-box;\r\n  margin: 0 auto;\r\n  max-width: ${(props) => props.width}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  width: 100%;\r\n`;\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Card from '../Card';\r\nimport CardContent from '../CardContent';\r\nimport Container from '../Container';\r\n\r\nexport interface ModalProps {\r\n  onDismiss?: () => void;\r\n}\r\n\r\nconst Modal: React.FC = ({ children }) => {\r\n  return (\r\n    <Container size=\"sm\">\r\n      <StyledModal>\r\n        <Card>\r\n          <CardContent>{children}</CardContent>\r\n        </Card>\r\n      </StyledModal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst StyledModal = styled.div`\r\n  border-radius: 12px;\r\n  position: relative;\r\n`;\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ModalTitleProps {\r\n  text?: string;\r\n}\r\n\r\nconst ModalTitle: React.FC<ModalTitleProps> = ({ text }) => <StyledModalTitle>{text}</StyledModalTitle>;\r\n\r\nconst StyledModalTitle = styled.div`\r\n  align-items: center;\r\n  // color: ${(props) => props.theme.color.grey[300]};\r\n  color: #d5d8e5;\r\n  display: flex;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.theme.topBarSize}px;\r\n  justify-content: center;\r\n  margin-top: ${(props) => -props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default ModalTitle;\r\n","import { useEffect } from 'react';\r\n// import { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\r\nimport { useWallet } from 'use-wallet';\r\n\r\nconst useEagerConnect = () => {\r\n  // const { login } = useAuth()\r\n  const { account, connect, connector } = useWallet();\r\n\r\n  if (account && window.localStorage.getItem('connectorId') === '') {\r\n    window.localStorage.setItem('connectorId', connector);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem('connectorId');\r\n    if (connectorId && !account) {\r\n      connect(connectorId);\r\n    }\r\n  }, [connect, account]);\r\n};\r\n\r\nexport default useEagerConnect;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid, Typography, Link } from '@material-ui/core';\r\nimport TwitterImage from '../../assets/img/twitter.svg';\r\nimport GithubImage from '../../assets/img/github.svg';\r\nimport TelegramImage from '../../assets/img/telegram.svg';\r\nimport DiscordImage from '../../assets/img/discord.svg';\r\nimport YoutubeImage from '../../assets/img/youtube.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    position: 'absolute',\r\n    bottom: '0',\r\n    paddingTop: '15px',\r\n    paddingBottom: '15px',\r\n    width: '100%',\r\n    color: 'white',\r\n    backgroundColor: '#28283D',\r\n    textAlign: 'center',\r\n    height: '1.3rem',\r\n    [theme.breakpoints.down('xs')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  link: {\r\n    width: '24px',\r\n    height: '24px',\r\n    display: 'inline',\r\n    marginLeft: '20px',\r\n  },\r\n\r\n  img: {\r\n    width: '24px',\r\n    height: '24px',\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"left\">\r\n              {'Copyright © '}\r\n              <Link color=\"inherit\" href=\"/\">\r\n                STONE Finance\r\n              </Link>{' '}\r\n              {new Date().getFullYear()}\r\n\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} style={{ textAlign: 'right' }}>\r\n            <a\r\n              href=\"#\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              className={classes.link}\r\n            >\r\n              <img alt=\"twitter\" src={TwitterImage} className={classes.img} />\r\n            </a>            \r\n            <a href=\"#\" rel=\"noopener noreferrer\" target=\"_blank\" className={classes.link}>\r\n              <img alt=\"telegram\" src={TelegramImage} className={classes.img} />\r\n            </a>\r\n            <a\r\n              href=\"#\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              className={classes.link}\r\n            >\r\n              <img alt=\"discord\" src={DiscordImage} className={classes.img} />\r\n            </a>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Footer from './Footer';\r\n\r\nexport default Footer;\r\n","import ListItemLink from './ListItemLink';\r\n\r\nexport default ListItemLink;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ListItem, ListItemText } from '@material-ui/core';\r\n\r\nconst ListItemLink = ({ primary, to }) => {\r\n  const CustomLink = React.useMemo(\r\n    () => React.forwardRef((linkProps, ref) => <Link ref={ref} to={to} {...linkProps} />),\r\n    [to],\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={CustomLink}>\r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItemLink;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Link } from 'react-router-dom';\r\nimport CashImage from '../../assets/img/cryto_stone.png';\r\nimport FantomLogo from '../../assets/img/fantom-logo-grey.png';\r\nimport Image from 'material-ui-image';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Drawer,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  useMediaQuery,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n} from '@material-ui/core';\r\n\r\nimport ListItemLink from '../ListItemLink';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AccountButton from './AccountButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: 'none',\r\n    },\r\n  },\r\n  appBar: {\r\n    color: '#d5d8e5',\r\n    'background-color': '#1f1f2b',\r\n    // borderBottom: `1px solid ${theme.palette.divider}`,\r\n    padding: '10px',\r\n    marginBottom: '3rem',\r\n  },\r\n  drawer: {\r\n    width: 240,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: 240,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  toolbar: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  toolbarTitle: {\r\n    fontFamily: '\"Poppins\", sans-serif',\r\n    // fontFamily: '\"Amarante\", cursive',\r\n    fontSize: '30px',\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    textTransform: 'capitalize',\r\n    color: '#d5d8e5',\r\n    fontSize: '14px',\r\n    margin: theme.spacing(1, 2),\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n  brandLink: {\r\n    textDecoration: 'none',\r\n    color: '#d5d8e5',\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Nav = () => {\r\n  const matches = useMediaQuery('(min-width:900px)');\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"sticky\" elevation={0} className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        {matches ? (\r\n          <>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle} style={{display: 'flex', alignItems: 'center'}}>\r\n              {/* <a className={ classes.brandLink } href=\"/\">STONE Finance</a> */}\r\n              <Image color=\"none\" style={{ width: '40px',height: '40px', paddingTop: '0px' }} src={CashImage} />\r\n              <Link to=\"/\" style={{color:'#fff', fontSize: '20px',}} className={classes.brandLink}>\r\n                STONE\r\n              </Link>\r\n              <Typography style={{ fontSize: '13px', marginRight: '50px', paddingLeft: '50px', alignItems: 'center', justifyContent: 'center' }}>Powered by\r\n                <Image color=\"none\" style={{ width: '80px',height: '20px', paddingTop: '0px' }} src={FantomLogo} />\r\n              </Typography>\r\n            </Typography>\r\n            <Box mr={5}>\r\n              <Link color=\"textPrimary\" to=\"/\" className={classes.link}>\r\n                Home\r\n              </Link>\r\n              <Link color=\"textPrimary\" to=\"/staking\" className={classes.link}>\r\n                Staking\r\n              </Link>\r\n              <Link color=\"textPrimary\" to=\"/boardroom\" className={classes.link}>\r\n                Board Room\r\n              </Link>\r\n              <Link color=\"textPrimary\" to=\"/bonds\" className={classes.link}>\r\n                Buy & Redeem Bonds\r\n              </Link>\r\n              {/* <Link color=\"textPrimary\" to=\"/sbs\" className={classes.link}>\r\n                SBS\r\n              </Link>\r\n              <Link color=\"textPrimary\" to=\"/liquidity\" className={classes.link}>\r\n                Liquidity\r\n              </Link>\r\n              <Link color=\"textPrimary\" to=\"/regulations\" className={classes.link}>\r\n                Regulations\r\n              </Link> */}\r\n              <a href=\"https://apxfinance.snazzydocs.com/docs/1.0/getting-started/introduction\" className={classes.link}>\r\n                Docs\r\n              </a>\r\n            </Box>\r\n            <AccountButton text=\"Connect Wallet\" />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Image color=\"none\" style={{ width: '40px',height: '40px', paddingTop: '0px' }} src={CashImage} />\r\n            <Link to=\"/\" style={{color:'#fff', fontSize: '20px',}} className={classes.brandLink}>\r\n              STONE\r\n            </Link>\r\n\r\n            <Drawer\r\n              className={classes.drawer}\r\n              onEscapeKeyDown={handleDrawerClose}\r\n              onBackdropClick={handleDrawerClose}\r\n              variant=\"temporary\"\r\n              anchor=\"left\"\r\n              open={open}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              <div>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                  {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n                <ListItemLink primary=\"Home\" to=\"/\" />\r\n                <ListItemLink primary=\"Staking\" to=\"/staking\" />\r\n                <ListItemLink primary=\"Board Room\" to=\"/boardroom\" />\r\n                <ListItemLink primary=\"Buy & Redeem Bonds\" to=\"/bonds\" />\r\n                {/*<ListItemLink primary=\"SBS\" to=\"/sbs\" />*/}\r\n                {/*<ListItemLink primary=\"Liquidity\" to=\"/liquidity\" />*/}\r\n                {/*<ListItemLink primary=\"Regulations\" to=\"/regulations\" />*/}\r\n                <ListItem button component=\"a\" href=\"https://apxfinance.snazzydocs.com/docs/1.0/getting-started/introduction\">\r\n                  <ListItemText>Docs</ListItemText>\r\n                </ListItem>\r\n\r\n                <ListItem style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                  <AccountButton text=\"Connect Wallet\" />\r\n                </ListItem>\r\n              </List>\r\n            </Drawer>\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import Nav from './Nav';\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport useEagerConnect from '../../hooks/useEagerConnect';\r\n\r\nimport Footer from '../Footer';\r\nimport Nav from '../Nav';\r\n\r\nconst Page: React.FC = ({ children }) => {\r\n  useEagerConnect();\r\n  return (\r\n    <div style={{ position: 'relative', minHeight: '100vh' }}>\r\n      <Nav />\r\n      <Container maxWidth=\"lg\" style={{ paddingBottom: '5rem' }}>\r\n        {children}\r\n      </Container>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import { useCallback, useContext } from 'react';\r\n\r\nimport { Context } from '../contexts/Modals';\r\n\r\nconst useModal = (modal: React.ReactNode) => {\r\n  const { onDismiss, onPresent } = useContext(Context);\r\n\r\n  const handlePresent = useCallback(() => {\r\n    onPresent(modal);\r\n  }, [modal, onPresent]);\r\n\r\n  return [handlePresent, onDismiss];\r\n};\r\n\r\nexport default useModal;\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst WalletCard = ({ icon, onConnect, title }) => (\r\n  <Button fullWidth onClick={onConnect} className=\"wallet-button\">\r\n    <span style={{ marginRight: '1rem', height: '2rem' }}>{icon}</span>\r\n    <span>{title}</span>\r\n  </Button>\r\n);\r\n\r\nexport default WalletCard;\r\n\r\n// :)\r\n","import React, { useEffect } from 'react';\r\nimport WalletCard from './WalletCard';\r\nimport { Modal, List } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport metamaskLogo from '../../assets/img/metamask-fox.svg';\r\nimport walletConnectLogo from '../../assets/img/wallet-connect.svg';\r\nimport coingBaseLogo from '../../assets/img/coinbase_logo.jpeg';\r\nimport { useWallet } from 'use-wallet';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: '400px',\r\n    maxWidth: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    outline: 'none',\r\n  },\r\n}));\r\n\r\nconst WalletProviderModal = ({ open, handleClose }) => {\r\n  const classes = useStyles();\r\n  const { account, connect } = useWallet();\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      handleClose();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"connect a wallet\"\r\n      aria-describedby=\"connect your crypto wallet\"\r\n      open={open}\r\n      style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n      onClose={handleClose}\r\n    >\r\n      <div className={classes.paper}>\r\n        <h2>Connect Wallet</h2>\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          <WalletCard\r\n            icon={<img src={metamaskLogo} alt=\"Metamask logo\" style={{ height: 32 }} />}\r\n            onConnect={() => {\r\n              connect('injected');\r\n            }}\r\n            title=\"Metamask\"\r\n          />\r\n          <WalletCard\r\n            icon={<img src={walletConnectLogo} alt=\"Wallet Connect logo\" style={{ height: 24 }} />}\r\n            onConnect={() => {\r\n              connect('walletconnect');\r\n            }}\r\n            title=\"WalletConnect\"\r\n          />\r\n          <WalletCard\r\n            icon={<img src={coingBaseLogo} alt=\"Coinbase wallet logo\" style={{ height: 32 }} />}\r\n            onConnect={() => {\r\n              connect('walletlink');\r\n            }}\r\n            title=\"Coinbase Wallet\"\r\n          />\r\n        </List>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WalletProviderModal;\r\n","import WalletProviderModal from './WalletProviderModal';\r\n\r\nexport default WalletProviderModal;\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport { getDisplayBalance } from '../../utils/formatBalance';\r\n\r\nimport Label from '../Label';\r\nimport Modal, { ModalProps } from '../Modal';\r\nimport ModalTitle from '../ModalTitle';\r\nimport useTombFinance from '../../hooks/useTombFinance';\r\nimport TokenSymbol from '../TokenSymbol';\r\n\r\nconst AccountModal: React.FC<ModalProps> = ({ onDismiss }) => {\r\n  const tombFinance = useTombFinance();\r\n\r\n  const tombBalance = useTokenBalance(tombFinance.APEX);\r\n  const displayTombBalance = useMemo(() => getDisplayBalance(tombBalance), [tombBalance]);\r\n\r\n  const tshareBalance = useTokenBalance(tombFinance.ASHARE);\r\n  const displayTshareBalance = useMemo(() => getDisplayBalance(tshareBalance), [tshareBalance]);\r\n\r\n  const tbondBalance = useTokenBalance(tombFinance.ABOND);\r\n  const displayTbondBalance = useMemo(() => getDisplayBalance(tbondBalance), [tbondBalance]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text=\"My Wallet\" />\r\n\r\n      <Balances>\r\n        <StyledBalanceWrapper>\r\n          <TokenSymbol symbol=\"APEX\" />\r\n          <StyledBalance>\r\n            <StyledValue>{displayTombBalance}</StyledValue>\r\n            <Label text=\"STONE Available\" />\r\n          </StyledBalance>\r\n        </StyledBalanceWrapper>\r\n\r\n        <StyledBalanceWrapper>\r\n          <TokenSymbol symbol=\"ASHARE\" />\r\n          <StyledBalance>\r\n            <StyledValue>{displayTshareBalance}</StyledValue>\r\n            <Label text=\"ASHARE Available\" />\r\n          </StyledBalance>\r\n        </StyledBalanceWrapper>\r\n\r\n        <StyledBalanceWrapper>\r\n          <TokenSymbol symbol=\"ABOND\" />\r\n          <StyledBalance>\r\n            <StyledValue>{displayTbondBalance}</StyledValue>\r\n            <Label text=\"ABOND Available\" />\r\n          </StyledBalance>\r\n        </StyledBalanceWrapper>\r\n      </Balances>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst StyledValue = styled.div`\r\n  //color: ${(props) => props.theme.color.grey[300]};\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst StyledBalance = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Balances = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledBalanceWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nexport default AccountModal;\r\n","import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { useWallet } from 'use-wallet';\r\nimport styled from 'styled-components';\r\nimport useModal from '../../hooks/useModal';\r\nimport WalletProviderModal from '../WalletProviderModal';\r\nimport AccountModal from './AccountModal';\r\n\r\ninterface AccountButtonProps {\r\n  text?: string;\r\n}\r\n\r\nconst CustomBtn = styled(Button)`\r\n    border-radius: 3px!important;\r\n    border-color: #1FE7ABFF !important;\r\n    height: 40px;\r\n    &:hover {\r\n      background-color: #0086ff !important;\r\n    }\r\n  `;\r\n\r\nconst AccountButton: React.FC<AccountButtonProps> = ({ text }) => {\r\n  const { account } = useWallet();\r\n  const accountEllipsis = account ? account.substring(0, 4) + \"...\" + account.substring(account.length - 4) : null;\r\n  const [onPresentAccountModal] = useModal(<AccountModal />);\r\n\r\n  const [isWalletProviderOpen, setWalletProviderOpen] = useState(false);\r\n\r\n  const handleWalletProviderOpen = () => {\r\n    setWalletProviderOpen(true);\r\n  };\r\n\r\n  const handleWalletProviderClose = () => {\r\n    setWalletProviderOpen(false);\r\n  };\r\n\r\n  const buttonText = text ? text : 'Connect Wallet';\r\n\r\n  return (\r\n    <div>\r\n      {!account ? (\r\n        <CustomBtn onClick={handleWalletProviderOpen} color=\"primary\" variant=\"contained\">\r\n          <p style={{color: '#212121'}}>{buttonText}</p>\r\n        </CustomBtn>\r\n      ) : (\r\n        <CustomBtn  color=\"primary\" variant=\"contained\" onClick={onPresentAccountModal}>\r\n          <p style={{color: '#212121', fontSize: '18px'}}><b>{accountEllipsis}</b></p>\r\n        </CustomBtn>\r\n      )}\r\n\r\n      <WalletProviderModal open={isWalletProviderOpen} handleClose={handleWalletProviderClose} />\r\n      {/* <AccountModal open={isAccountModalOpen} handleClose={handleAccountModalClose}/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CardContent: React.FC = ({ children }) => <StyledCardContent>{children}</StyledCardContent>;\r\n\r\nconst StyledCardContent = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default CardContent;\r\n","module.exports = __webpack_public_path__ + \"static/media/metamask-fox.c06f3a3e.svg\";"],"sourceRoot":""}