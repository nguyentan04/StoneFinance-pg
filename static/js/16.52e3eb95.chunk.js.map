{"version":3,"sources":["components/Button/Button.tsx","views/Bonds/components/ExchangeModal.tsx","hooks/useCatchError.ts","views/Bonds/components/ExchangeCard.tsx","hooks/useCashPriceInLastTWAP.ts","views/Bonds/components/ExchangeStat.tsx","hooks/useBondsPurchasable.ts","tomb-finance/constants.ts","views/Bonds/Bonds.tsx","components/ModalActions/ModalActions.tsx","hooks/useApprove.ts","components/UnlockWallet/UnlockWallet.tsx","assets/img/bg.jpg","components/Spacer/Spacer.tsx","hooks/useBondStats.ts"],"names":["StyledButton","styled","button","props","theme","color","grey","boxShadow","disabled","fontSize","size","padding","undefined","StyledLink","Link","spacing","StyledExternalLink","a","Button","buttonColor","buttonSize","buttonPadding","children","href","onClick","text","to","variant","useContext","ThemeContext","teal","primary","main","ButtonChild","useMemo","target","ExchangeModal","max","title","description","onConfirm","onDismiss","action","tokenName","useState","val","setVal","fullBalance","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","value","handleSelectMax","Modal","ModalTitle","TokenInput","onSelectMax","onChange","symbol","Label","ModalActions","useCatchError","addPopup","useAddPopup","promise","message","catch","err","includes","console","error","stack","StyledCardTitle","div","StyledCardIcon","StyledExchanger","StyledExchangeArrow","StyledToken","StyledCardActions","StyledDesc","span","StyledCardContentInner","ExchangeCard","fromToken","fromTokenName","toToken","toTokenName","priceDesc","onExchange","disabledDescription","catchError","Treasury","useTombFinance","contracts","useApprove","address","approveStatus","approve","balance","useTokenBalance","useModal","onPresent","Card","CardContent","TokenSymbol","icon","faArrowRight","ApprovalState","APPROVED","PENDING","UNKNOWN","useCashPriceInLastTWAP","BigNumber","from","price","setPrice","tombFinance","fetchCashPrice","getTombPriceInLastTWAP","useEffect","refreshInterval","setInterval","config","clearInterval","ExchangeStat","useBondsPurchasable","setBalance","getBondsPurchasable","fetchBondsPurchasable","DECIMALS_18","pow","BOND_REDEEM_PRICE_BN","mul","BackgroundImage","createGlobalStyle","Background","StyledBond","StyledCardWrapper","StyledStatsWrapper","Bonds","path","useRouteMatch","account","useWallet","addTransaction","useTransactionAdder","bondStat","useBondStats","cashPrice","bondsPurchasable","bondBalance","ABOND","handleBuyBonds","amount","buyBonds","tx","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","isBondPurchasable","tokenInFtm","Page","className","exact","Typography","style","align","gutterBottom","APEX","getDisplayBalance","Spacer","eq","UnlockWallet","StyledModalActions","StyledModalAction","StyledSpacer","l","React","Children","toArray","length","map","child","i","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","token","spender","pendingApproval","useHasPendingApproval","currentAllowance","useAllowance","approvalState","lt","NOT_APPROVED","response","approval","tokenAddress","Box","position","top","left","transform","AccountButton","module","exports","s","stat","setStat","slowRefresh","useRefresh","getBondStat","fetchBondPrice"],"mappings":"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","file":"static/js/16.52e3eb95.chunk.js","sourcesContent":["import React, { useContext, useMemo } from 'react';\r\nimport styled, { ThemeContext } from 'styled-components';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  href?: string;\r\n  onClick?: () => void;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  text?: string;\r\n  to?: string;\r\n  variant?: 'default' | 'secondary' | 'tertiary';\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to, variant }) => {\r\n  const { color, spacing } = useContext(ThemeContext);\r\n\r\n  let buttonColor: string;\r\n  switch (variant) {\r\n    case 'secondary':\r\n      buttonColor = color.teal[200];\r\n      break;\r\n    case 'default':\r\n    default:\r\n      buttonColor = color.primary.main;\r\n  }\r\n\r\n  let boxShadow: string;\r\n  let buttonSize: number;\r\n  let buttonPadding: number;\r\n  let fontSize: number;\r\n  switch (size) {\r\n    case 'sm':\r\n      buttonPadding = spacing[3];\r\n      buttonSize = 36;\r\n      fontSize = 14;\r\n      break;\r\n    case 'lg':\r\n      buttonPadding = spacing[4];\r\n      buttonSize = 72;\r\n      fontSize = 16;\r\n      break;\r\n    case 'md':\r\n    default:\r\n      buttonPadding = spacing[4];\r\n      buttonSize = 56;\r\n      fontSize = 16;\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>;\r\n    } else if (href) {\r\n      return (\r\n        <StyledExternalLink href={href} target=\"__blank\">\r\n          {text}\r\n        </StyledExternalLink>\r\n      );\r\n    } else {\r\n      return text;\r\n    }\r\n  }, [href, text, to]);\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string;\r\n  color: string;\r\n  disabled?: boolean;\r\n  fontSize: number;\r\n  padding: number;\r\n  size: number;\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[900]};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  box-shadow: ${(props) => props.boxShadow};\r\n  color: ${(props) => (!props.disabled ? props.color : `${props.color}55`)};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${(props) => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${(props) => props.padding}px;\r\n  padding-right: ${(props) => props.padding}px;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  width: 100%;\r\n  &:hover {\r\n    background-color: ${(props) => props.color};\r\n    color: ${(props) => props.theme.color.grey[900]};\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default Button;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport Button from '../../../components/Button';\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\r\nimport { BigNumber } from 'ethers';\r\nimport Label from '../../../components/Label';\r\n\r\ninterface ExchangeModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  title: string;\r\n  description: string;\r\n  action: string;\r\n  tokenName: string;\r\n}\r\n\r\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\r\n  max,\r\n  title,\r\n  description,\r\n  onConfirm,\r\n  onDismiss,\r\n  action,\r\n  tokenName,\r\n}) => {\r\n  const [val, setVal] = useState('');\r\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\r\n\r\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value), [setVal]);\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={title} />\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <Label text={description} />\r\n      <ModalActions>\r\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\r\n        <Button text={action} onClick={() => onConfirm(val)} />\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ExchangeModal;\r\n","import { useCallback } from 'react';\r\nimport { useAddPopup } from '../state/application/hooks';\r\n\r\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\r\n\r\nfunction useCatchError(): (promise: Promise<any>, message?: string) => void {\r\n  const addPopup = useAddPopup();\r\n\r\n  return useCallback(\r\n    (promise: Promise<any>, message = DEFAULT_ERROR_MSG) => {\r\n      promise.catch((err) => {\r\n        if (err.message.includes('User denied')) {\r\n          // User denied transaction signature on MetaMask.\r\n          return;\r\n        }\r\n        console.error(`Uncaught exception: ${err.stack}`);\r\n        addPopup({ error: { message, stack: err.stack } });\r\n      });\r\n    },\r\n    [addPopup],\r\n  );\r\n}\r\n\r\nexport default useCatchError;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button, Card } from '@material-ui/core';\r\n\r\n// import Button from '../../../components/Button';\r\n// import Card from '../../../components/Card';\r\nimport CardContent from '../../../components/CardContent';\r\nimport useTombFinance from '../../../hooks/useTombFinance';\r\nimport Label from '../../../components/Label';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport useModal from '../../../hooks/useModal';\r\nimport ExchangeModal from './ExchangeModal';\r\nimport ERC20 from '../../../tomb-finance/ERC20';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\r\nimport useCatchError from '../../../hooks/useCatchError';\r\n\r\ninterface ExchangeCardProps {\r\n  action: string;\r\n  fromToken: ERC20;\r\n  fromTokenName: string;\r\n  toToken: ERC20;\r\n  toTokenName: string;\r\n  priceDesc: string;\r\n  onExchange: (amount: string) => void;\r\n  disabled?: boolean;\r\n  disabledDescription?: string;\r\n}\r\n\r\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\r\n  action,\r\n  fromToken,\r\n  fromTokenName,\r\n  toToken,\r\n  toTokenName,\r\n  priceDesc,\r\n  onExchange,\r\n  disabled = false,\r\n  disabledDescription,\r\n}) => {\r\n  const catchError = useCatchError();\r\n  const {\r\n    contracts: { Treasury },\r\n  } = useTombFinance();\r\n  const [approveStatus, approve] = useApprove(fromToken, Treasury.address);\r\n\r\n  const balance = useTokenBalance(fromToken);\r\n  const [onPresent, onDismiss] = useModal(\r\n    <ExchangeModal\r\n      title={action}\r\n      description={priceDesc}\r\n      max={balance}\r\n      onConfirm={(value) => {\r\n        onExchange(value);\r\n        onDismiss();\r\n      }}\r\n      action={action}\r\n      tokenName={fromTokenName}\r\n    />,\r\n  );\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <StyledCardContentInner>\r\n          <StyledCardTitle>{`${action} ${toTokenName}`}</StyledCardTitle>\r\n          <StyledExchanger>\r\n            <StyledToken>\r\n              <StyledCardIcon>\r\n                <TokenSymbol symbol={fromToken.symbol} size={54} />\r\n              </StyledCardIcon>\r\n              <Label text={fromTokenName} variant=\"normal\" />\r\n            </StyledToken>\r\n            <StyledExchangeArrow>\r\n              <FontAwesomeIcon icon={faArrowRight} />\r\n            </StyledExchangeArrow>\r\n            <StyledToken>\r\n              <StyledCardIcon>\r\n                <TokenSymbol symbol={toToken.symbol} size={54} />\r\n              </StyledCardIcon>\r\n              <Label text={toTokenName} variant=\"normal\" />\r\n            </StyledToken>\r\n          </StyledExchanger>\r\n          <StyledDesc>{priceDesc}</StyledDesc>\r\n          <StyledCardActions>\r\n            {approveStatus !== ApprovalState.APPROVED && !disabled ? (\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={approveStatus === ApprovalState.PENDING || approveStatus === ApprovalState.UNKNOWN}\r\n                onClick={() => catchError(approve(), `Unable to approve ${fromTokenName}`)}\r\n              >\r\n                {`Approve ${fromTokenName}`}\r\n              </Button>\r\n            ) : (\r\n              <Button color=\"primary\" variant=\"contained\" onClick={onPresent} disabled={disabled}>\r\n                {disabledDescription || action}\r\n              </Button>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCardTitle = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: white;\r\n  height: 64px;\r\n  justify-content: center;\r\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledCardIcon = styled.div`\r\n  width: 72px;\r\n  height: 72px;\r\n  border-radius: 36px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nconst StyledExchanger = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\r\n`;\r\n\r\nconst StyledExchangeArrow = styled.div`\r\n  font-size: 20px;\r\n  padding-left: ${(props) => props.theme.spacing[3]}px;\r\n  padding-right: ${(props) => props.theme.spacing[3]}px;\r\n  padding-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledToken = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledDesc = styled.span``;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default ExchangeCard;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\nimport { BigNumber } from 'ethers';\r\n\r\nconst useCashPriceInLastTWAP = () => {\r\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n\r\n  const fetchCashPrice = useCallback(async () => {\r\n    setPrice(await tombFinance.getTombPriceInLastTWAP());\r\n  }, [tombFinance]);\r\n\r\n  useEffect(() => {\r\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch APEX price: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPrice, tombFinance, fetchCashPrice]);\r\n  return price;\r\n};\r\n\r\nexport default useCashPriceInLastTWAP;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Card } from '@material-ui/core';\r\n\r\ninterface ExchangeStatProps {\r\n  tokenName: string;\r\n  description: string;\r\n  price: string;\r\n}\r\n\r\nconst ExchangeStat: React.FC<ExchangeStatProps> = ({ tokenName, description, price }) => {\r\n  return (\r\n    <Card>\r\n      <StyledCardContentInner>\r\n        <StyledCardTitle>{`💰 ${tokenName} = ${price} FTM`}</StyledCardTitle>\r\n        <StyledDesc>{description}</StyledDesc>\r\n      </StyledCardContentInner>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCardTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nconst StyledDesc = styled.span`\r\n  //color: ${(props) => props.theme.color.grey[300]};\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding-bottom: 50px;\r\n  padding: ${(props) => props.theme.spacing[0]}px;\r\n`;\r\n\r\nexport default ExchangeStat;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\n\r\nconst useBondsPurchasable = () => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchBondsPurchasable() {\r\n        try {\r\n            setBalance(await tombFinance.getBondsPurchasable());\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n        }\r\n      }\r\n    fetchBondsPurchasable();\r\n  }, [setBalance, tombFinance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useBondsPurchasable;\r\n","import { BigNumber } from 'ethers';\r\n\r\nexport const DECIMALS_18 = BigNumber.from(10).pow(18);\r\n\r\nexport const BOND_REDEEM_PRICE = 1.01;\r\nexport const BOND_REDEEM_PRICE_BN = DECIMALS_18.mul(101).div(100);\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport Page from '../../components/Page';\r\nimport PitImage from '../../assets/img/pit.png';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport { useWallet } from 'use-wallet';\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport ExchangeCard from './components/ExchangeCard';\r\nimport styled from 'styled-components';\r\nimport Spacer from '../../components/Spacer';\r\nimport useBondStats from '../../hooks/useBondStats';\r\nimport useTombFinance from '../../hooks/useTombFinance';\r\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\r\nimport { useTransactionAdder } from '../../state/transactions/hooks';\r\nimport ExchangeStat from './components/ExchangeStat';\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\r\nimport { getDisplayBalance } from '../../utils/formatBalance';\r\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../tomb-finance/constants';\r\nimport {Typography} from \"@material-ui/core\";\r\nimport Background from '../../assets/img/bg.jpg';\r\n\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    // background-size: cover !important;\r\n    // background-color: rgb(24, 24, 33);\r\n    background: url(${Background}) no-repeat !important;\r\n  }\r\n`;\r\n\r\nconst Bonds: React.FC = () => {\r\n  const { path } = useRouteMatch();\r\n  const { account } = useWallet();\r\n  const tombFinance = useTombFinance();\r\n  const addTransaction = useTransactionAdder();\r\n  const bondStat = useBondStats();\r\n  const cashPrice = useCashPriceInLastTWAP();\r\n  const bondsPurchasable = useBondsPurchasable();\r\n\r\n  const bondBalance = useTokenBalance(tombFinance?.ABOND);\r\n\r\n  const handleBuyBonds = useCallback(\r\n    async (amount: string) => {\r\n      const tx = await tombFinance.buyBonds(amount);\r\n      addTransaction(tx, {\r\n        summary: `Buy ${Number(amount).toFixed(2)} ABOND with ${amount} APEX`,\r\n      });\r\n    },\r\n    [tombFinance, addTransaction],\r\n  );\r\n\r\n  const handleRedeemBonds = useCallback(\r\n    async (amount: string) => {\r\n      const tx = await tombFinance.redeemBonds(amount);\r\n      addTransaction(tx, { summary: `Redeem ${amount} ABOND` });\r\n    },\r\n    [tombFinance, addTransaction],\r\n  );\r\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\r\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat]);\r\n\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n        <BackgroundImage />\r\n          <div className=\"animateme\">\r\n              <ul className=\"bg-bubbles\">\r\n                  <li></li>\r\n                  <li></li>\r\n                  <li></li>\r\n                  <li></li>\r\n                  <li></li>\r\n                  <li></li>\r\n                  <li></li>\r\n                  <li></li>\r\n                  <li></li>\r\n                  <li></li>\r\n                  <li></li>\r\n                  <li></li>\r\n                  <li></li>\r\n              </ul>\r\n          </div>\r\n        {!!account ? (\r\n          <>\r\n            <Route exact path={path}>\r\n                <Typography style={{color:'#fff'}} align=\"left\" variant=\"h5\" gutterBottom>\r\n                    Buy & Redeem bonds\r\n                </Typography>            \r\n            </Route>\r\n            <StyledBond>\r\n              <StyledCardWrapper>\r\n                <ExchangeCard\r\n                  action=\"Purchase\"\r\n                  fromToken={tombFinance.APEX}\r\n                  fromTokenName=\"STONE\"\r\n                  toToken={tombFinance.ABOND}\r\n                  toTokenName=\"SBOND\"\r\n                  priceDesc={\r\n                    !isBondPurchasable\r\n                      ? 'STONE is over peg'\r\n                      : getDisplayBalance(bondsPurchasable, 18, 4) + ' SBOND available for purchase'\r\n                  }\r\n                  onExchange={handleBuyBonds}\r\n                  disabled={!bondStat || isBondRedeemable}\r\n                />\r\n              </StyledCardWrapper>\r\n              <StyledStatsWrapper>\r\n                <ExchangeStat\r\n                  tokenName=\"STONE\"\r\n                  description=\"Last-Hour TWAP Price\"\r\n                  price={getDisplayBalance(cashPrice, 18, 4)}\r\n                />\r\n                <Spacer size=\"md\" />\r\n                <ExchangeStat\r\n                  tokenName=\"SBOND\"\r\n                  description=\"Current Price: (STONE)^2\"\r\n                  price={Number(bondStat?.tokenInFtm).toFixed(2) || '-'}\r\n                />\r\n              </StyledStatsWrapper>\r\n              <StyledCardWrapper>\r\n                <ExchangeCard\r\n                  action=\"Redeem\"\r\n                  fromToken={tombFinance.ABOND}\r\n                  fromTokenName=\"SBOND\"\r\n                  toToken={tombFinance.APEX}\r\n                  toTokenName=\"STONE\"\r\n                  priceDesc={`${getDisplayBalance(bondBalance)} SBOND Available in wallet`}\r\n                  onExchange={handleRedeemBonds}\r\n                  disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\r\n                  disabledDescription={!isBondRedeemable ? `Enabled when STONE > ${BOND_REDEEM_PRICE}FTM` : null}\r\n                />\r\n              </StyledCardWrapper>\r\n            </StyledBond>\r\n          </>\r\n        ) : (\r\n          <UnlockWallet />\r\n        )}\r\n      </Page>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nconst StyledBond = styled.div`\r\n  display: flex;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst StyledStatsWrapper = styled.div`\r\n  display: flex;\r\n  flex: 0.8;\r\n  margin: 0 20px;\r\n  flex-direction: column;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n    margin: 16px 0;\r\n  }\r\n`;\r\n\r\nexport default Bonds;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length;\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <StyledSpacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  );\r\n};\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[100]}00;\r\n  display: flex;\r\n  height: 96px;\r\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\r\n    ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default ModalActions;\r\n","import { BigNumber, ethers } from 'ethers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport AccountButton from '../Nav/AccountButton';\r\n\r\nconst UnlockWallet = () => {\r\n  return (\r\n    <Box style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n      <AccountButton />\r\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UnlockWallet;\r\n","module.exports = __webpack_public_path__ + \"static/media/bg.1923e644.jpg\";","import React, { useContext } from 'react';\r\nimport styled, { ThemeContext } from 'styled-components';\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext);\r\n\r\n  let s: number;\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6];\r\n      break;\r\n    case 'sm':\r\n      s = spacing[2];\r\n      break;\r\n    case 'md':\r\n    default:\r\n      s = spacing[4];\r\n  }\r\n\r\n  return <StyledSpacer size={s} />;\r\n};\r\n\r\ninterface StyledSpacerProps {\r\n  size: number;\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`;\r\n\r\nexport default Spacer;\r\n","import { useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { TokenStat } from '../tomb-finance/types';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useBondStats = () => {\r\n  const [stat, setStat] = useState<TokenStat>();\r\n  const { slowRefresh } = useRefresh();\r\n  const tombFinance = useTombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchBondPrice() {\r\n      try {\r\n        setStat(await tombFinance.getBondStat());\r\n      }\r\n      catch(err){\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchBondPrice();\r\n  }, [setStat, tombFinance, slowRefresh]);\r\n\r\n  return stat;\r\n};\r\n\r\nexport default useBondStats;\r\n"],"sourceRoot":""}